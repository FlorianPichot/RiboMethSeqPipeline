#!/bin/sh

for i in `find T*.gz`
do
#SELECT ONLY SHORT READS maxi 39 adapted to trimming STR7
gzip -dc $i | awk 'NR%4==1{a=$0} NR%4==2{b=$0} NR%4==3{c=$0} NR%4==0&&length(b)<40 {print a"\n"b"\n"c"\n"$0;}' | gzip > S$i
rm $i
done
#alignment by Bowtie2

#FN = Input files
#BTPath = Path to Bowtie index
#FAPath = Path to reference fasta file

nohup bowtie2  --no-1mm-upfront -D 15 -R 2 -N 0 -L 10 -i S,1,1.15   -p 16 -x $BTPath  -U $FN -S tmp.sam  --un-gz Non_rRNA_$folder.fastq.gz > nohup_bowtieL10EtoE_rRNA_$folder.out 

#SORTING
samtools view -bS  tmp.sam | samtools sort -o tempbam.bam

#KEEP ONLY MAPPED READS
samtools view -h -F 4 -b tempbam.bam > mapped_RNA.bam
samtools view -h  mapped_RNA.bam > mapped_RNA.sam

rm tmp.sam
rm tempbam.bam
#SELECTION OF UNIQUELY MAPPED READS ONLY
grep -E "@|NM:" mapped_RNA.sam | grep -v "XS:" > unique_rRNA_$folder.sam

samtools mpileup -f $FAPath -aBQ0 -d10000000 unique_rRNA_$folder.sam | cut -f1-4 > coverage_mpileup_$folder.csv

#Counting of RNA counts
awk '{print $3}' unique_rRNA_$folder.sam | sort | uniq -c | awk '{print $3,$2,$1,$4}' | sort -n > unique_rRNA_count_$folder.csv

#CREATE A LIST OF RNAS to treat ONLY WITH OVER 100 counts retained
awk '{print $3}'  mapped_RNA.sam | sort | uniq -c | awk '{print $3,$2,$1,$4}' > Count_RNA_$folder.csv
awk '(NR>0) && ($2 > 100 ) ' Count_RNA_$folder.csv | sort -nrk 2,2  >  Sorted_Count_RNA_$folder.csv
awk '{print $1}' Sorted_Count_RNA_$folder.csv > RNA_list.csv
rm Count_RNA_$folder.csv
rm mapped_RNA.sam

samtools view -Sb  unique_rRNA_$folder.sam > unique_rRNA_$folder.bam
samtools index  unique_rRNA_$folder.bam

bedtools bamtobed -i  unique_rRNA_$folder.bam > mapped_rRNA.bed 

#READING from file the RNAs names line by line
while read -r RNA_name
do
#SEPARATE COUNTS FOR selected RNAs
grep "$RNA_name" mapped_rRNA.bed > mapped_rRNA_$RNA_name.bed

#COUNTING
awk '{print $2}' mapped_rRNA_$RNA_name.bed | sort | uniq -c | awk '{print $3,$2,$1,$4}' | sort -n > UCount5prime_$RNA_name.csv
awk '{print $3}' mapped_rRNA_$RNA_name.bed | sort | uniq -c | awk '{print $3,$2,$1,$4}' | sort -n > UCount3prime_$RNA_name.csv
#SPLIT COVERAGE by RNA
grep "$RNA_name" coverage_mpileup_$folder.csv > coverage_$RNA_name.csv

rm mapped_rRNA_$RNA_name.bed
done < RNA_list.csv

#CLEANING
rm mapped_RNA.bam
rm  mapped_rRNA.bed
rm unique_rRNA_$folder.sam


